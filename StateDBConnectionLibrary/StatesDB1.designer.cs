#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StateDBConnectionLibrary
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="StatesDB")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
        

        #region Extensibility Method Definitions
        partial void OnCreated();
    partial void InsertStateTable(StateTable instance);
    partial void UpdateStateTable(StateTable instance);
    partial void DeleteStateTable(StateTable instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::StateDBConnectionLibrary.Properties.Settings.Default.StatesDataBabseConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<StateTable> StateTables
		{
			get
			{
				return this.GetTable<StateTable>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StateTable")]
	public partial class StateTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _StateName;
		
		private string _StateCapital;
		
		private System.Nullable<decimal> _StatePopulation;
		
		private string _StateLargestCity;
		
		private string _StateBird;
		
		private string _StateFlower;
		
		private string _StateColor;
		
		private string _StateFlagInfo;
		
		private System.Nullable<decimal> _StateMedianIncome;
		
		private string _OveralWorkforce;
		
		private string _JobPosting_;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStateNameChanging(string value);
    partial void OnStateNameChanged();
    partial void OnStateCapitalChanging(string value);
    partial void OnStateCapitalChanged();
    partial void OnStatePopulationChanging(System.Nullable<decimal> value);
    partial void OnStatePopulationChanged();
    partial void OnStateLargestCityChanging(string value);
    partial void OnStateLargestCityChanged();
    partial void OnStateBirdChanging(string value);
    partial void OnStateBirdChanged();
    partial void OnStateFlowerChanging(string value);
    partial void OnStateFlowerChanged();
    partial void OnStateColorChanging(string value);
    partial void OnStateColorChanged();
    partial void OnStateFlagInfoChanging(string value);
    partial void OnStateFlagInfoChanged();
    partial void OnStateMedianIncomeChanging(System.Nullable<decimal> value);
    partial void OnStateMedianIncomeChanged();
    partial void OnOveralWorkforceChanging(string value);
    partial void OnOveralWorkforceChanged();
    partial void OnJobPosting_Changing(string value);
    partial void OnJobPosting_Changed();
    #endregion
		
		public StateTable()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateName", DbType="NVarChar(50)")]
		public string StateName
		{
			get
			{
				return this._StateName;
			}
			set
			{
				if ((this._StateName != value))
				{
					this.OnStateNameChanging(value);
					this.SendPropertyChanging();
					this._StateName = value;
					this.SendPropertyChanged("StateName");
					this.OnStateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateCapital", DbType="NVarChar(50)")]
		public string StateCapital
		{
			get
			{
				return this._StateCapital;
			}
			set
			{
				if ((this._StateCapital != value))
				{
					this.OnStateCapitalChanging(value);
					this.SendPropertyChanging();
					this._StateCapital = value;
					this.SendPropertyChanged("StateCapital");
					this.OnStateCapitalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatePopulation", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> StatePopulation
		{
			get
			{
				return this._StatePopulation;
			}
			set
			{
				if ((this._StatePopulation != value))
				{
					this.OnStatePopulationChanging(value);
					this.SendPropertyChanging();
					this._StatePopulation = value;
					this.SendPropertyChanged("StatePopulation");
					this.OnStatePopulationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateLargestCity", DbType="NVarChar(MAX)")]
		public string StateLargestCity
		{
			get
			{
				return this._StateLargestCity;
			}
			set
			{
				if ((this._StateLargestCity != value))
				{
					this.OnStateLargestCityChanging(value);
					this.SendPropertyChanging();
					this._StateLargestCity = value;
					this.SendPropertyChanged("StateLargestCity");
					this.OnStateLargestCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateBird", DbType="NVarChar(50)")]
		public string StateBird
		{
			get
			{
				return this._StateBird;
			}
			set
			{
				if ((this._StateBird != value))
				{
					this.OnStateBirdChanging(value);
					this.SendPropertyChanging();
					this._StateBird = value;
					this.SendPropertyChanged("StateBird");
					this.OnStateBirdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateFlower", DbType="NVarChar(50)")]
		public string StateFlower
		{
			get
			{
				return this._StateFlower;
			}
			set
			{
				if ((this._StateFlower != value))
				{
					this.OnStateFlowerChanging(value);
					this.SendPropertyChanging();
					this._StateFlower = value;
					this.SendPropertyChanged("StateFlower");
					this.OnStateFlowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateColor", DbType="NChar(10)")]
		public string StateColor
		{
			get
			{
				return this._StateColor;
			}
			set
			{
				if ((this._StateColor != value))
				{
					this.OnStateColorChanging(value);
					this.SendPropertyChanging();
					this._StateColor = value;
					this.SendPropertyChanged("StateColor");
					this.OnStateColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateFlagInfo", DbType="NVarChar(MAX)")]
		public string StateFlagInfo
		{
			get
			{
				return this._StateFlagInfo;
			}
			set
			{
				if ((this._StateFlagInfo != value))
				{
					this.OnStateFlagInfoChanging(value);
					this.SendPropertyChanging();
					this._StateFlagInfo = value;
					this.SendPropertyChanged("StateFlagInfo");
					this.OnStateFlagInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateMedianIncome", DbType="Money")]
		public System.Nullable<decimal> StateMedianIncome
		{
			get
			{
				return this._StateMedianIncome;
			}
			set
			{
				if ((this._StateMedianIncome != value))
				{
					this.OnStateMedianIncomeChanging(value);
					this.SendPropertyChanging();
					this._StateMedianIncome = value;
					this.SendPropertyChanged("StateMedianIncome");
					this.OnStateMedianIncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OveralWorkforce", DbType="NChar(10)")]
		public string OveralWorkforce
		{
			get
			{
				return this._OveralWorkforce;
			}
			set
			{
				if ((this._OveralWorkforce != value))
				{
					this.OnOveralWorkforceChanging(value);
					this.SendPropertyChanging();
					this._OveralWorkforce = value;
					this.SendPropertyChanged("OveralWorkforce");
					this.OnOveralWorkforceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[JobPosting ]", Storage="_JobPosting_", DbType="NChar(10)")]
		public string JobPosting_
		{
			get
			{
				return this._JobPosting_;
			}
			set
			{
				if ((this._JobPosting_ != value))
				{
					this.OnJobPosting_Changing(value);
					this.SendPropertyChanging();
					this._JobPosting_ = value;
					this.SendPropertyChanged("JobPosting_");
					this.OnJobPosting_Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
